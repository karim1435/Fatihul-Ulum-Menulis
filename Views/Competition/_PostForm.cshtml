@model ScraBoy.Features.Lomba.Contest.Competition

    @using(Html.BeginForm(null,null,FormMethod.Post,new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true,"",new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title,new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description,20,40,new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinimumWord,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinimumWord,new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimumWord,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaximumWord,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaximumWord,new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaximumWord,"",new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StartedOn,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartedOn,new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.StartedOn,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndOn,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndOn,new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.EndOn,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StatusContest,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.StatusContest,htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusContest,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UrlImage,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ImageFile" class="btn btn-primary" />
                    <p>@Model.UrlImage</p>
                    @Html.ValidationMessageFor(model => model.UrlImage,"",new { @class = "text-danger" })
                    <p class="text-muted">Jangan ragu untuk memakai gambar dengan kualitas terbaik </p>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Select Category",new { @class = "control-label col-md-2" })
                <div class="col-md-10 dropup">
                    @Html.DropDownListFor(
                 model => model.CategoryId,new SelectList(ViewBag.Events,"Id","Name"),
                 new { @class = "form-control",@placeholder = "Enter Title",@autofocus = "autofocus" }
             )
                    @Html.ValidationMessageFor(model => model.CategoryId,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Reward,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Reward,new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Reward,"",new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

<script src="~/Scripts/tinymce/tinymce.js"></script>
<script src="~/Scripts/main.js"></script>